from pybricks import ev3brick as brick
import time

# freq, length, delay
#sheetmusic = [[660,100,150],[660,100,300],[660,100,300],[510,100,100],[660,100,300],[770,100,550],[380,100,575],[510,100,450],[380,100,400],[320,100,500],[440,100,300],[480,80,330],[450,100,150],[430,100,300],[380,100,200],[660,80,200],[760,50,150],[860,100,300],[700,80,150],[760,50,350],[660,80,300],[520,80,150],[580,80,150],[480,80,500],[510,100,450],[380,100,400],[320,100,500],[440,100,300],[480,80,330],[450,100,150],[430,100,300],[380,100,200],[660,80,200],[760,50,150],[860,100,300],[700,80,150],[760,50,350],[660,80,300],[520,80,150],[580,80,150],[480,80,500],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,150,300],[380,100,150],[430,100,150],[500,100,300],[430,100,150],[500,100,100],[570,100,220],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,200,300],[1020,80,300],[1020,80,150],[1020,80,300],[380,100,300],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,150,300],[380,100,150],[430,100,150],[500,100,300],[430,100,150],[500,100,100],[570,100,420],[585,100,450],[550,100,420],[500,100,360],[380,100,300],[500,100,300],[500,100,150],[500,100,300],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,150,300],[380,100,150],[430,100,150],[500,100,300],[430,100,150],[500,100,100],[570,100,220],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,200,300],[1020,80,300],[1020,80,150],[1020,80,300],[380,100,300],[500,100,300],[760,100,100],[720,100,150],[680,100,150],[620,150,300],[650,150,300],[380,100,150],[430,100,150],[500,100,300],[430,100,150],[500,100,100],[570,100,420],[585,100,450],[550,100,420],[500,100,360],[380,100,300],[500,100,300],[500,100,150],[500,100,300],[500,60,150],[500,80,300],[500,60,350],[500,80,150],[580,80,350],[660,80,150],[500,80,300],[430,80,150],[380,80,600],[500,60,150],[500,80,300],[500,60,350],[500,80,150],[580,80,150],[660,80,550],[870,80,325],[760,80,600],[500,60,150],[500,80,300],[500,60,350],[500,80,150],[580,80,350],[660,80,150],[500,80,300],[430,80,150],[380,80,600],[660,100,150],[660,100,300],[660,100,300],[510,100,100],[660,100,300],[770,100,550],[380,100,575]]

# timestamp, note
sheetmusic = [[0,660],[100,None],[250,660],[350,None],[650,660],[750,None],[1050,510],[1150,None],[1250,660],[1350,None],[1650,770],[1750,None],[2300,380],[2400,None],[2975,510],[3075,None],[3525,380],[3625,None],[4025,320],[4125,None],[4625,440],[4725,None],[5025,480],[5105,None],[5435,450],[5535,None],[5685,430],[5785,None],[6085,380],[6185,None],[6385,660],[6465,None],[6665,760],[6715,None],[6865,860],[6965,None],[7265,700],[7345,None],[7495,760],[7545,None],[7895,660],[7975,None],[8275,520],[8355,None],[8505,580],[8585,None],[8735,480],[8815,None],[9315,510],[9415,None],[9865,380],[9965,None],[10365,320],[10465,None],[10965,440],[11065,None],[11365,480],[11445,None],[11775,450],[11875,None],[12025,430],[12125,None],[12425,380],[12525,None],[12725,660],[12805,None],[13005,760],[13055,None],[13205,860],[13305,None],[13605,700],[13685,None],[13835,760],[13885,None],[14235,660],[14315,None],[14615,520],[14695,None],[14845,580],[14925,None],[15075,480],[15155,None],[15655,500],[15755,None],[16055,760],[16155,None],[16255,720],[16355,None],[16505,680],[16605,None],[16755,620],[16905,None],[17205,650],[17355,None],[17655,380],[17755,None],[17905,430],[18005,None],[18155,500],[18255,None],[18555,430],[18655,None],[18805,500],[18905,None],[19005,570],[19105,None],[19325,500],[19425,None],[19725,760],[19825,None],[19925,720],[20025,None],[20175,680],[20275,None],[20425,620],[20575,None],[20875,650],[21075,None],[21375,1020],[21455,None],[21755,1020],[21835,None],[21985,1020],[22065,None],[22365,380],[22465,None],[22765,500],[22865,None],[23165,760],[23265,None],[23365,720],[23465,None],[23615,680],[23715,None],[23865,620],[24015,None],[24315,650],[24465,None],[24765,380],[24865,None],[25015,430],[25115,None],[25265,500],[25365,None],[25665,430],[25765,None],[25915,500],[26015,None],[26115,570],[26215,None],[26635,585],[26735,None],[27185,550],[27285,None],[27705,500],[27805,None],[28165,380],[28265,None],[28565,500],[28665,None],[28965,500],[29065,None],[29215,500],[29315,None],[29615,500],[29715,None],[30015,760],[30115,None],[30215,720],[30315,None],[30465,680],[30565,None],[30715,620],[30865,None],[31165,650],[31315,None],[31615,380],[31715,None],[31865,430],[31965,None],[32115,500],[32215,None],[32515,430],[32615,None],[32765,500],[32865,None],[32965,570],[33065,None],[33285,500],[33385,None],[33685,760],[33785,None],[33885,720],[33985,None],[34135,680],[34235,None],[34385,620],[34535,None],[34835,650],[35035,None],[35335,1020],[35415,None],[35715,1020],[35795,None],[35945,1020],[36025,None],[36325,380],[36425,None],[36725,500],[36825,None],[37125,760],[37225,None],[37325,720],[37425,None],[37575,680],[37675,None],[37825,620],[37975,None],[38275,650],[38425,None],[38725,380],[38825,None],[38975,430],[39075,None],[39225,500],[39325,None],[39625,430],[39725,None],[39875,500],[39975,None],[40075,570],[40175,None],[40595,585],[40695,None],[41145,550],[41245,None],[41665,500],[41765,None],[42125,380],[42225,None],[42525,500],[42625,None],[42925,500],[43025,None],[43175,500],[43275,None],[43575,500],[43635,None],[43785,500],[43865,None],[44165,500],[44225,None],[44575,500],[44655,None],[44805,580],[44885,None],[45235,660],[45315,None],[45465,500],[45545,None],[45845,430],[45925,None],[46075,380],[46155,None],[46755,500],[46815,None],[46965,500],[47045,None],[47345,500],[47405,None],[47755,500],[47835,None],[47985,580],[48065,None],[48215,660],[48295,None],[48845,870],[48925,None],[49250,760],[49330,None],[49930,500],[49990,None],[50140,500],[50220,None],[50520,500],[50580,None],[50930,500],[51010,None],[51160,580],[51240,None],[51590,660],[51670,None],[51820,500],[51900,None],[52200,430],[52280,None],[52430,380],[52510,None],[53110,660],[53210,None],[53360,660],[53460,None],[53760,660],[53860,None],[54160,510],[54260,None],[54360,660],[54460,None],[54760,770],[54860,None],[55410,380],[55510,None]]
cycle_time = 1000

# playing super mario song
class Music():
    def __init__(self):
        self.sheet = sheetmusic
        self.sound = brick.sound
        self.time_counter = 0
        self.note_counter = 0
        self.playing = False

    def determine_note_change(self):
        #check whether note passed
        if self.time_counter >= self.sheet[self.note_counter][0]:
            self.note_counter += 1
        else:
            pass # do nothing
        if self.note_counter >= len(self.sheet):
            # song finished
            # restart ??
            self.time_counter = 0
            self.note_counter = 0
        else:
            pass # do nothing
    
    def play_music(self):
        self.playing = True
        self.determine_note_change()
        
        note = self.sheet[self.note_counter][1]
        if note != None:
            self.sound.beep(note)
        self.time_counter += cycle_time  # updating timestamp

    def isPlaying(self):
        return self.playing
        

music = Music()

def get_music():
    return music

#for freq,length,delay in sheetmusic:
#    brick.sound.beep(freq,length)
#    time.sleep(delay/1000)